
Array methods

ADDING AND REMOVING ELEMENTS FROM ARRAYS

* push() methods

TASK: adds one or more elements at the end of the array
RETURN: returns the new length of the array after adding elements
ARGUMENTS: takes one or more elements as arguments
CHANGE ORIGINAL VALUE: yes
STATIC or NON-STATIC: non-static (you call it with a variable)


* pop() method

TASK: removes the last element from  the array
RETURN: returns the removed element
  note: returns undefined if the array is empty
ARGUMENTS: no arguments
CHANGE ORIGINAL VALUE: yes
STATIC or NON-STATIC: non-static (you call it with a variable)

//const cannot be reassigned! but theit value especially in case of objects reference
 types can be changed.//

* unshift() method

TASK: adds one or more elements to the beginning of the array
RETURN: returns the new length of the array
ARGUMENTS: takes one or more elements as arguments
CHANGE ORIGINAL VALUE: yes
STATIC or NON-STATIC: non-static (you call it with a variable)


* shift() method

TASK: removes the last element from the beginning of the the array
RETURN: returns the removed element
  note: returns undefined if the array is empty
ARGUMENTS: no arguments
CHANGE ORIGINAL VALUE: yes
STATIC or NON-STATIC: non-static (you call it with a variable)


* isArray() method

TASK: checks if a variable is array
RETURN: boolean. true if variable is an array or false if variable is not an array
ARGUMENTS: yes, takes a variable to check if it is array or not
CHANGE ORIGINAL VALUE: no
STATIC or NON-STATIC: STATIC 


* at() method

TASK: retrieves the element at the specified index
RETURN:  the found element or undefined if no element found at the specified index
ARGUMENTS: takes an index as an argument
CHANGE ORIGINAL VALUE: no
STATIC or NON-STATIC:  NON-STATIC



* includes() method

TASK: checks if the array includes the specified element
RETURN: returns a boolean . true if array contains the specified element or false othewise
ARGUMENTS: takes an element to check if array contains it or not
CHANGE ORIGINAL VALUE: no
STATIC or NON-STATIC: NON-STATIC


* indexOf() method

TASK: checks the array if it contains the specified element
RETURN:the index of first found match or -1 if element does not exist in the array
ARGUMENTS: takes an element to check if array contains it or not
CHANGE ORIGINAL VALUE: no
STATIC or NON-STATIC: non-static 


* lastIndex() method

TASK: checks the array if it contains the specified element
RETURN:the index of last found match or -1 if element does not exist in the array
ARGUMENTS: takes an element to check if array contains it or not
CHANGE ORIGINAL VALUE: no
STATIC or NON-STATIC: non-static 



* concat( method)

TASK: combines one array with another or multiple other arrays
RETURN: returns a new array which is the combination of multiple arrays
ARGUMENTS: takes one or more arrays as arguments
CHANGE ORIGINAL VALUE: no
STATIC or NON-STATIC: non-static

* * Spread operator: this is a new feature added to JS with ES6 release and useful
to concatenate arrays by spreading array elements into another array 

syntax:    ...arrVariable

 

* reverse() method

TASK: reverse the array
RETURN:the returns the same array reversed
ARGUMENTS: no
CHANGE ORIGINAL VALUE: yes
STATIC or NON-STATIC: non-static 


* slice() method

TASK: extracts partial array from original array
RETURN: returns a new array
ARGUMENTS: 1 or 2 indexes
CHANGE ORIGINAL VALUE: no
STATIC or NON-STATIC: non-static



* splice() method
splice() method 
TASK: used to add or remove elements anywhere within the array 
RETURN: returns the removed elements as an array 
ARGUMENTS: 2 or more arguments 
    1st argument is the start position-index 
    2nd arguement is the number of elements you want to remove including the start position-index 
    3rd... are the new elements to be added after the start position-index 
CHANGE ORIGINAL VALUE: YES
STATIC or NON-STATIC: NON-STATIC



const variables cannot be reassigned! but their value especially in case of 
reference types can be changed.









