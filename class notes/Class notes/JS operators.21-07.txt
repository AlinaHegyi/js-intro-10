  

RECAP

1.Primitives- programmers cannot create new data types
 -string:
-numbers:
-boolean:
-undefined:
-null:
bigInt:
 symbol:

2.Reference types -all are objects 
  -you are allowed to create your custom objects





objects; used to store key-value data pairs (properties
 car 
 make = "Wolfswagen"
 model = '"jetta"
 year =  2022
 mileage = 10000
 VIN = '123445612345'

const.car = {make = "Wolfswagen"
 model = '"jetta"
 year =  2022
 mileage = 10000
 VIN = '123445612345'};


 = vs == vs ===

  =      assingment operator

  comparison
  ==      (loose) checks only values and returns true if they are same value. does not care about data types

 ===     (strict) checks both value and types.if both are equal, returns true. returns false otherwise.

3 == '3'  true
3 === '3' false

MAC CLI commands

GUI -graphical user interface

     OPERATORS

 27 % 6 = 3   
 20 % 5 = 0

 
 1.if the number on left is less than number on the right, the remainder is the left number. 
       3 % 6 = 3

2 .if the number on the left is divisible with the number on the right, then the remainder is always zero.
         100 % 5 = 0
3.if the number on the left is greater than number on the right, then you will calculate and find the remainder



 3 ** 3 - 10 + 25 % 2 + 7
 27 - 10 + 25 % 2 + 7
 25 - 10 + 1 +7
25


Order of operation:
   -  parantheses
   - exponent
   -multiplication or division
   -modulus/remainder
   - addition and substraction


